name: Build & Deploy to Kind

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/frontend
  TAG: latest

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ---- Docker Login ----
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ---- Build & Push Backend ----
      - name: Build and push Backend
        run: |
          docker build -t $BACKEND_IMAGE:$TAG ./backend
          docker push $BACKEND_IMAGE:$TAG

      # ---- Build & Push Frontend ----
      - name: Build and push Frontend
        run: |
          docker build -t $FRONTEND_IMAGE:$TAG ./frontend
          docker push $FRONTEND_IMAGE:$TAG

      # ---- Setup kind ----
      - name: Setup kind cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: kind

      # ---- Deploy Manifests ----
      - name: Deploy to Kind
        run: |
          kubectl apply -f k8s/

      - name: Check pod status
        run: kubectl get pods -o wide

      # ---- Wait for Pods to be Ready ----
      - name: Wait for all pods to be ready
        run: |
          set +e
          kubectl wait --for=condition=ready pod --all --timeout=180s
          STATUS=$?
          if [ $STATUS -ne 0 ]; then
            echo "Pods did not become ready. Debugging..."
            echo "---- PODS ----"
            kubectl get pods -o wide
            echo "---- BACKEND DESCRIBE ----"
            kubectl describe pod -l app=backend || true
            echo "---- FRONTEND DESCRIBE ----"
            kubectl describe pod -l app=frontend || true
            echo "---- BACKEND LOGS ----"
            kubectl logs -l app=backend --tail=50 || true
            echo "---- FRONTEND LOGS ----"
            kubectl logs -l app=frontend --tail=50 || true
            exit 1
          fi

      # ---- Debug: Show resources ----
      - name: Get all resources
        run: |
          kubectl get pods,svc,ingress -A

      # ---- Verify (Optional) ----
      - name: Try curling frontend service
        run: |
          kubectl port-forward svc/frontend-service 8080:80 &
          sleep 5
          curl http://localhost:8080 || echo "Frontend not reachable yet"
